============
Installation
============

Singularity
-----------

Installing :code:`bilby_pipe` should only be required if you are developing or
testing. For most users, and in particular production-use, please use a
`singularity image <singularity.txt>`_.

Install bilby_pipe from source
------------------------------

:code:`bilby_pipe` is developed and tested for Python 3.5, 3.6, and 3.7. In the
following, we assume you have a working python installation, `python pip
<https://packaging.python.org/tutorials/installing-packages/#use-pip-for-installing)>`_,
and `git <https://git-scm.com/>`_.

Clone the repository and then install the software:

.. code-block:: console

   $ git clone git@git.ligo.org:lscsoft/bilby_pipe.git
   $ cd bilby_pipe/
   $ python setup.py install


.. note::
   If you do not have a git.ligo account, and recieve an error message:

   .. code-block:: console

      git@git.ligo.org: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
      fatal: Could not read from remote repository.

   Then you need to use the HTTPS URL, e.g., replace the first line above with

   .. code-block:: console

      $ git clone https://git.ligo.org/lscsoft/bilby.git


Once you have run these steps, you have :code:`bilby_pipe` installed. However,
you will also need to install `bilby <https://git.ligo.org/lscsoft/bilby>`_.
Installation instructions can be found `here
<https://lscsoft.docs.ligo.org/bilby/installation.html>`_.


Whilst the code is developed, we expect to find many bugs. These can either be
in bilby_pipe or in bilby. To debug the problem it is useful to know which
version of the code you are using.

To see which version of the code you are using, call

.. code-block:: console

  $ bilby_pipe --version

If the output of :code:`bilby_pipe --version` contains something like

.. code-block:: console

  bilby_pipe 0.0.1: (UNCLEAN) 3fd2820 2019-01-01 15:08:26 -0800

rather than

.. code-block:: console

  bilby_pipe 0.0.1:

Then you have installed :code:`bilby_pipe` from source. This information is
also printed everytime the code is called and therefore will be at the top of
your log files.


Working with time-domain inteferometer data
-------------------------------------------

:code:`bilby_pipe` handles data from the interferometers using the `gwpy
<https://gwpy.github.io/docs/stable/timeseries/remote-access.html>`_ library.
When requesting data, we first look for local frame-files, then use the `NDS2
<https://www.lsc-group.phys.uwm.edu/daswg/projects/nds-client/doc/manual/>`_
library to fetch properitary data remotely, finally we search the open data.

To best utilise this tool, you should ensure your python installation has
access to `LDAS-tools <https://anaconda.org/conda-forge/ldas-tools-framecpp>`_
for local frame-file lookup and `NDS2
<https://anaconda.org/conda-forge/python-nds2-client>`_ for properietary remote
data look up. These libraries are typically part of most LIGO data stacks and
can be installed with conda using the commands

.. code-block:: console

   $ conda install -c conda-forge ldas-tools-framecpp
   $ conda install -c conda-forge python-nds2-client



